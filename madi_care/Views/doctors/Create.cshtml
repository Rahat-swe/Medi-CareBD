@model madi_care.Models.doctor

@{
    ViewBag.Title = "Create";
}

<h2>Create Doctor Account</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Doctor</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <label>Name</label>
    <div class="form-group">
      
        <div class="col-md-10">
            @Html.EditorFor(model => model.dname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dname, "", new { @class = "text-danger" })
        </div>
    </div>
    <label>Phone</label>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.dphone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dphone, "", new { @class = "text-danger" })
        </div>
    </div>

    <label>Address</label>
    <div class="form-group">
          <div class="col-md-10">
            @Html.EditorFor(model => model.daddresss, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.daddresss, "", new { @class = "text-danger" })
        </div>
    </div>

    <label>Gender</label>
    <div class="form-group">
          <div class="col-md-10">
            @Html.EditorFor(model => model.dgender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dgender, "", new { @class = "text-danger" })
        </div>
    </div>

    <label>Qualification</label>
    <div class="form-group">
       <div class="col-md-10">
            @Html.EditorFor(model => model.dqualification, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dqualification, "", new { @class = "text-danger" })
        </div>
    </div>

    <label>E-mail</label>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.dmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <label>Password</label>
    <div class="form-group">
       <div class="col-md-10">
            @Html.EditorFor(model => model.dpassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dpassword, "", new { @class = "text-danger" })
        </div>
    </div>


    <label>Age</label>
    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.dage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
